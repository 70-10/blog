---
import type { CollectionEntry } from "astro:content";
import CalendarIcon from "../../components/CalendarIcon.astro";
import Tag from "../../components/Tag.astro";
import Layout from "../../layouts/Layout.astro";
import { cdateJST } from "../../lib/cdate-jst";
import { getPosts } from "../../lib/repositories/posts";
import "../../styles/markdown-body.css";

interface Props {
  post: CollectionEntry<"posts">;
}

export async function getStaticPaths() {
  const posts = await getPosts();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: {
      post,
    },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<Layout
  title={post.data.title}
  seo={{
    openGraph: {
      type: "article",
      image: new URL(`/og/${post.slug}.png`, Astro.url.origin).toString(),
    },
  }}
>
  <main class="base">
    <section class="content">
      <div class="flex items-center">
        <div class="min-w-0 flex-1">
          <h1 class="title">{post.data.title}</h1>
          <div class="subtitle-section">
            <div class="publish-at">
              <CalendarIcon />
              <time>{cdateJST(post.data.publishDate).format("YYYY/MM/DD")}</time
              >
            </div>
          </div>
        </div>
      </div>
      <div class="tags">
        {post.data.tags.map((tag) => <Tag name={tag} />)}
      </div>
    </section>
    <section class="content">
      <article class="markdown-body">
        <Content />
      </article>
    </section>
  </main>
</Layout>

<style>
  .base {
    @apply grid grid-cols-10 gap-y-10;
    @apply mt-5;
  }

  .content {
    @apply col-span-8 col-start-2;
    @apply md:col-span-6 md:col-start-3;
  }

  .title {
    @apply text-4xl font-extrabold leading-tight;
  }

  .subtitle-section {
    @apply mt-1;
    @apply flex flex-col;
  }

  .publish-at {
    @apply mt-2;
    @apply flex items-center;
    @apply text-sm text-gray-500;
  }

  .tags {
    @apply mt-2;
  }
</style>
